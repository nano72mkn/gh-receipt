#!/usr/bin/env bash
set -e

# ヘルプ表示
show_help() {
    cat << EOF
Usage: gh-receipt [USERNAME] [OPTIONS]

GitHub の活動レシートを美しく表示します

Options:
  -h, --help      このヘルプを表示
  -d, --days N    過去N日間のデータを表示 (デフォルト: 30)
  -w, --weekly    過去7日間のデータを表示
  -m, --monthly   過去30日間のデータを表示
  -y, --yearly    過去365日間のデータを表示

Examples:
  gh-receipt                    # 自分の過去30日間の活動
  gh-receipt nano72mkn          # 特定ユーザーの過去30日間
  gh-receipt -w                 # 自分の過去7日間
  gh-receipt nano72mkn --weekly # 特定ユーザーの過去7日間
  gh-receipt nano72mkn -d 90    # 特定ユーザーの過去90日間
EOF
}

# デフォルト値
USERNAME=""
DAYS=30

# 引数解析
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -w|--weekly)
            DAYS=7
            shift
            ;;
        -m|--monthly)
            DAYS=30
            shift
            ;;
        -y|--yearly)
            DAYS=365
            shift
            ;;
        -d|--days)
            DAYS="$2"
            shift 2
            ;;
        -*)
            echo "エラー: 不明なオプション: $1"
            echo "詳細は gh-receipt --help を参照してください"
            exit 1
            ;;
        *)
            if [ -z "$USERNAME" ]; then
                USERNAME="$1"
            fi
            shift
            ;;
    esac
done

# ユーザー名が指定されていない場合は現在のユーザーを使用
if [ -z "$USERNAME" ]; then
    USERNAME=$(gh api user -q .login 2>/dev/null || echo "")
    if [ -z "$USERNAME" ]; then
        echo "エラー: ユーザー名を指定するか、gh auth login でログインしてください"
        exit 1
    fi
fi

# 色の定義（レシート風にモノクロメイン）
DIM='\033[2m'
BOLD='\033[1m'
REVERSE='\033[7m'
NC='\033[0m'

# 日付計算（macOS と Linux の両方に対応）
if date -v -1d >/dev/null 2>&1; then
    # macOS
    FROM_DATE=$(date -v-${DAYS}d -u +%Y-%m-%dT%H:%M:%SZ)
    TODAY=$(date +%Y-%m-%d)
    CURRENT_TIME=$(date "+%Y/%m/%d %H:%M:%S")
else
    # Linux
    FROM_DATE=$(date -u -d "${DAYS} days ago" +%Y-%m-%dT%H:%M:%SZ)
    TODAY=$(date +%Y-%m-%d)
    CURRENT_TIME=$(date "+%Y/%m/%d %H:%M:%S")
fi

echo -e "${DIM}データ取得中...${NC}"

# GraphQL クエリでデータ取得
RESPONSE=$(gh api graphql -f query='
  query($username: String!, $from: DateTime!, $to: DateTime!) {
    user(login: $username) {
      contributionsCollection(from: $from, to: $to) {
        totalCommitContributions
        totalPullRequestContributions
        totalPullRequestReviewContributions
        totalIssueContributions
        restrictedContributionsCount
        contributionCalendar {
          totalContributions
          weeks {
            contributionDays {
              date
              contributionCount
            }
          }
        }
      }
    }
  }
' -f username="$USERNAME" -f from="$FROM_DATE" -f to="${TODAY}T23:59:59Z" 2>/dev/null) || {
    echo -e "エラー: データの取得に失敗しました"
    exit 1
}

# データ解析
PUBLIC_COMMITS=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.totalCommitContributions')
PUBLIC_PRS=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.totalPullRequestContributions')
PUBLIC_REVIEWS=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.totalPullRequestReviewContributions')
PUBLIC_ISSUES=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.totalIssueContributions')
PRIVATE_TOTAL=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.restrictedContributionsCount // 0')
TOTAL_CONTRIBUTIONS=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.contributionCalendar.totalContributions')

# レシート風出力
echo
echo "================================================"
echo "                                                "
echo "            GITHUB ACTIVITY RECEIPT             "
echo "                                                "
echo "================================================"
echo "  ${CURRENT_TIME}                    "
echo "  USER: @${USERNAME}                           "
echo "------------------------------------------------"
echo "                                                "
printf "  %-30s %10s\n" "COMMITS (PUBLIC)" "${PUBLIC_COMMITS}"
printf "  %-30s %10s\n" "COMMITS (PRIVATE)" "${PRIVATE_TOTAL}"
printf "  %-30s %10s\n" "PULL REQUESTS" "${PUBLIC_PRS}"
printf "  %-30s %10s\n" "CODE REVIEWS" "${PUBLIC_REVIEWS}"
printf "  %-30s %10s\n" "ISSUES" "${PUBLIC_ISSUES}"
echo "                                  ------------- "
printf "  ${BOLD}%-30s %10s${NC}\n" "TOTAL ACTIVITIES" "${TOTAL_CONTRIBUTIONS}"
echo "================================================"
echo "                                                "

# 週間サマリー（レシート風）
echo "  DAILY BREAKDOWN (LAST 7 DAYS)                "
echo "  -----------------------------                "

# 最後の7日分のデータを取得
DISPLAY_DAYS=$((DAYS > 7 ? 7 : DAYS))
echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.contributionCalendar.weeks[-1].contributionDays[] | 
  "\(.date)|\(.contributionCount)"' | tail -${DISPLAY_DAYS} | {
    while IFS='|' read -r date count; do
        if [ -n "$date" ]; then
            # 日付フォーマット
            day_display=$(date -j -f "%Y-%m-%d" "$date" "+%m/%d %a" 2>/dev/null || date -d "$date" "+%m/%d %a")
            
            # 棒グラフ（レシート風に * で表現）
            if [ "$count" -gt 0 ]; then
                bar=$(printf '*%.0s' $(seq 1 $((count > 20 ? 20 : count))))
            else
                bar="-"
            fi
            
            printf "  %-10s [%-20s] %3d\n" "$day_display" "$bar" "$count"
        fi
    done
}

echo "                                                "
echo "================================================"

# レシート番号とバーコード風
RECEIPT_NO=$(echo "${USERNAME}${DAYS}${TODAY}" | md5sum | cut -c1-12 | tr '[:lower:]' '[:upper:]')
echo "  NO: ${RECEIPT_NO}                             "
echo "                                                "
echo "  |||||| |||| | |||| ||| |||| ||||||| |||||||  "
echo "  ${RECEIPT_NO}                                  "
echo "                                                "
echo "================================================"
echo "         Thank you for your commits!            "
echo "            Have a productive day!              "
echo "================================================"
echo
echo -e "${DIM}Powered by gh-receipt${NC}"